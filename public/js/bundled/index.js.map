{"mappings":"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","sources":["public/js/leaflet.js","public/js/alerts.js","public/js/updateSettings.js","public/js/index.js","public/js/signup.js","public/js/login.js","public/js/stripe.js"],"sourcesContent":["/* eslint-disable */\n\n//adding a map to our tours page\nexport const displayMap = locations => {\n  //creating our map in our div\n  let map = L.map('map', { zoomControl: false });\n\n  //creating a style layer for our map and adding it to our map\n  L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n  }).addTo(map);\n\n  const points = [];\n\n  locations.forEach(loc => {\n    //adding our coordinates to points array\n    points.push([loc.coordinates[1], loc.coordinates[0]]);\n\n    //creating a marker for each coordinate, adding it to our map and creating a message for each marker with the day and description\n    L.marker([loc.coordinates[1], loc.coordinates[0]])\n      .addTo(map)\n      .bindPopup(`<p>Day ${loc.day}: ${loc.description}</p>`, {\n        autoClose: false\n      })\n      .openPopup();\n  });\n\n  //specifying map bounds to include current locations\n  const bounds = L.latLngBounds(points).pad(0.5);\n  map.fitBounds(bounds);\n\n  //disabling zoom in our map\n  map.scrollWheelZoom.disable();\n};\n","/* eslint-disable */\n\n//hiding alerts\nexport const hideAlert = () => {\n  const el = document.querySelector('.alert');\n  if (el) el.parentElement.removeChild(el);\n};\n\n//showing alerts\nexport const showAlert = (type, msg, time = 5) => {\n  hideAlert();\n  const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\n  document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\n  window.setTimeout(hideAlert, time * 1000);\n};\n","/* eslint-disable */\n\n//dependencies\nimport axios from 'axios';\nimport { showAlert } from './alerts';\n\n//making a call to the API from the client side to update user data\n//update functionality with axios\nexport const updateSettings = async (data, type) => {\n  try {\n    //create url according to which type of data we are trying to update\n    const url =\n      type === 'password'\n        ? '/api/v1/users/updateMyPassword'\n        : '/api/v1/users/updateMe';\n\n    const res = await axios({\n      method: 'PATCH',\n      url,\n      data\n    });\n\n    if (res.data.status === 'success') {\n      showAlert('success', `User ${type} updated successfully`);\n      window.setTimeout(() => {\n        location.reload(true);\n      }, 1000);\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n","/* eslint-disable */\n\n//dependencies\nimport 'regenerator-runtime/runtime';\nimport { displayMap } from './leaflet';\nimport { login, logout } from './login';\nimport { signup } from './signup';\nimport { updateSettings } from './updateSettings';\nimport { bookTour } from './stripe';\nimport { showAlert } from './alerts';\n\n\n//DOM ELEMENTS\nconst mapBox = document.getElementById('map');\nconst signUpForm = document.querySelector('.form--signup');\nconst loginForm = document.querySelector('.form--login');\nconst logOutBtn = document.querySelector('.nav__el--logout');\nconst userDataForm = document.querySelector('.form-user-data');\nconst userPasswordForm = document.querySelector('.form-user-password');\nconst bookBtn = document.getElementById('book-tour');\n\nif (mapBox) {\n  //adding a map to each tour page\n  const locations = JSON.parse(mapBox.dataset.locations); //reading the locations from the dataset property\n  displayMap(locations);\n}\n\n//adding functionality to our sign up form\nif (signUpForm) {\n  signUpForm.addEventListener('submit', e => {\n    //preventing form from being sent before executing the rest of the code of this function\n    e.preventDefault();\n    const name = document.getElementById('name').value;\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    const passwordConfirm = document.getElementById('passwordConfirm').value;\n    signup(name, email, password, passwordConfirm);\n  });\n}\n\n//adding functionality to our login form\nif (loginForm) {\n  loginForm.addEventListener('submit', e => {\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    //preventing form from being sent before executing the rest of the code of this function\n    e.preventDefault();\n    login(email, password);\n  });\n}\n\n//adding functionality to our logout button\nif (logOutBtn) {\n  logOutBtn.addEventListener('click', logout);\n}\n\n//adding functionality to our user data form\nif (userDataForm) {\n  userDataForm.addEventListener('submit', e => {\n    //preventing form from being sent before executing the rest of the code of this function\n    e.preventDefault();\n\n    //programatically recreating a multipart/form-data\n    const form = new FormData();\n    form.append('name', document.getElementById('name').value);\n    form.append('email', document.getElementById('email').value);\n    form.append('photo', document.getElementById('photo').files[0]);\n\n    updateSettings(form, 'data');\n  });\n}\n\n//adding functionality to our user password form\nif (userPasswordForm) {\n  userPasswordForm.addEventListener('submit', async e => {\n    //preventing form from being sent before executing the rest of the code of this function\n    e.preventDefault();\n\n    //changing button value -> updating message for user while API is working and encrypting password\n    document.querySelector('.btn--save-password').textContent = 'Updating...'; //\n\n    const passwordCurrent = document.getElementById('password-current').value;\n    const password = document.getElementById('password').value;\n    const passwordConfirm = document.getElementById('password-confirm').value;\n    //waiting until the update is finished before continue\n    await updateSettings(\n      { passwordCurrent, password, passwordConfirm },\n      'password'\n    );\n\n    //once finished: changing button back to its original value\n    document.querySelector('.btn--save-password').textContent = 'Save password';\n\n    //clearing inputs after sending form\n    document.getElementById('password-current').value = '';\n    document.getElementById('password').value = '';\n    document.getElementById('password-confirm').value = '';\n  });\n}\n\n//adding functionality to our book tour button\nif (bookBtn) {\n  bookBtn.addEventListener('click', e => {\n    e.target.textContent = 'Processing...';\n    const { tourId } = e.target.dataset; //the ID of the button is tour-id -> it converts to tourId in the event target dataset, so it's the same name and it can be destructured\n    bookTour(tourId);\n  });\n}\n\n//adding an alert message for successful bookings\nconst alertMessage = document.querySelector('body').dataset.alert; //getting the alert from the dataset property\nif(alertMessage) showAlert('success', alertMessage, 20);","/* eslint-disable */\n\n//dependencies\nimport axios from 'axios';\nimport { showAlert } from './alerts';\n\n//signup functionality with axios\nexport const signup = async (name, email, password, passwordConfirm) => {\n  try {\n    const res = await axios({\n      method: 'POST',\n      url: '/api/v1/users/signup',\n      data: {\n        name,\n        email,\n        password,\n        passwordConfirm\n      }\n    });\n    if (res.data.status === 'success') {\n      showAlert('success', 'User created successfully');\n      window.setTimeout(() => {\n        location.assign('/');\n      }, 1000);\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n","/* eslint-disable */\n\n//dependencies\nimport axios from 'axios';\nimport { showAlert } from './alerts';\n\n//login functionality with axios\nexport const login = async (email, password) => {\n  try {\n    const res = await axios({\n      method: 'POST',\n      url: '/api/v1/users/login',\n      data: {\n        email,\n        password\n      }\n    });\n\n    if (res.data.status === 'success') {\n      showAlert('success', 'Logged in successfully');\n      window.setTimeout(() => {\n        location.assign('/');\n      }, 1000);\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n\n//logout functionality using axios\nexport const logout = async () => {\n  try {\n    const res = await axios({\n      method: 'GET',\n      url: '/api/v1/users/logout'\n    });\n    if (res.data.status === 'success') {\n      location.reload(true);\n    }\n  } catch (error) {\n    showAlert('error', 'Error logging out. Try again.');\n  }\n};\n","/* eslint-disable */\n\n//dependencies\nimport axios from 'axios';\nimport { showAlert } from './alerts';\n\nexport const bookTour = async tourId => {\n  const stripe = Stripe(\n    'pk_test_51KmJ3GCrw5ZzWe8vkWUUcRZCyKf95KiYXpEtKKNEO68lSkqsLUVWfeJeTS8iRRxHySSQziRisxSvK7UVnlGKkkgk00dTkW8hY0'\n  );\n  try {\n    //1) getting checkout session from API\n    const session = await axios(`/api/v1/bookings/checkout-session/${tourId}`);\n    //2) creating checkout form + charging credit card\n    await stripe.redirectToCheckout({\n      sessionId: session.data.session.id\n    });\n  } catch (error) {\n    console.log(error);\n    showAlert('error', err.response.data.message);\n  }\n};\n"],"names":["$1449e2aae815cef1$export$516836c6a9dfc573","el","document","querySelector","parentElement","removeChild","$1449e2aae815cef1$export$de026b00723010c1","type","msg","time","markup","insertAdjacentHTML","window","setTimeout","$6d501e6a9597d2bd$export$f558026a994b6051","async","data","url","$parcel$interopDefault","$7Gqth$axios","method","status","location","reload","err","response","message","$0a984acc79c38cfe$var$mapBox","getElementById","$0a984acc79c38cfe$var$signUpForm","$0a984acc79c38cfe$var$loginForm","$0a984acc79c38cfe$var$logOutBtn","$0a984acc79c38cfe$var$userDataForm","$0a984acc79c38cfe$var$userPasswordForm","$0a984acc79c38cfe$var$bookBtn","locations","map","L","zoomControl","tileLayer","attribution","addTo","points","forEach","loc","push","coordinates","marker","bindPopup","day","description","autoClose","openPopup","bounds","latLngBounds","pad","fitBounds","scrollWheelZoom","disable","$ee16711565208dc3$export$4c5dd147b21b9176","JSON","parse","dataset","addEventListener","e","preventDefault","name","email","password","passwordConfirm","assign","$5ed2b45833b60431$export$7200a869094fec36","value","$670f245a287eee1a$export$596d806903d1f59e","error","form","FormData","append","files","textContent","passwordCurrent","target","tourId","stripe","Stripe","session","redirectToCheckout","sessionId","id","console","log","$bf47579665d4523d$export$8d5bdbf26681c0c2","$0a984acc79c38cfe$var$alertMessage","alert"],"version":3,"file":"index.js.map","sourceRoot":"../../../"}